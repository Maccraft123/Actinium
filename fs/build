#!/bin/bash
CADMIUMROOT=$1
ROOTPART=$2

set -e
set -v

source $CADMIUMROOT/config
source $CADMIUMROOT/board/$TARGET/boardinfo
source $CADMIUMROOT/baseboard/$BASEBOARD/boardinfo

cd $CADMIUMROOT/tmp
mkdir -p root
mkfs.f2fs -f $ROOTPART
mount $ROOTPART root

# if we are on arm64 machine, don't use qemu to execute arm64 code
if [ "$(uname -m)" = "$ARCH_UNAME" ]; then
	echo "Running on $ARCH machine"
	foreign=''
else
	case "$ARCH_UNAME" in
		armv7l)
			if [ "$(uname -m)" = "aarch64" ]; then
				echo "Running on arm64 machine capable of executing armv7l programs"
				foreign=''
			fi
		;;
		aarch64)
			cp "$(which qemu-aarch64-static)" root/
			qemu="/qemu-aarch64-static"
			foreign='--foreign'
			echo "Running on not-aarch64 machine"
		;;
		*)
			exit 1
		;;
	esac
fi

cd $CADMIUMROOT/tmp

# rootfs-specific setup
case "$ROOTFS" in
	debian)
		echo "Installing Debian"
		# debootstrap randomly exits with 1, so there's that || true
		debootstrap $foreign --arch=$ARCH_DEB buster $CADMIUMROOT/tmp/root/ https://deb.debian.org/debian/ || true
		# probably it can be ran on target device with little shim that does that and then execs init
		[ -n "$foreign" ] && chroot root/ /debootstrap/debootstrap --second-stage
		# preinstall packages to have wifi
		chroot root/ $qemu /bin/apt update
		chroot root/ $qemu /bin/apt install -y vim vboot-utils network-manager debootstrap parted f2fs-tools
	;;
	# let's explain this: when void is set, $V is set to -v, so it does 'grep -v musl', printing link without musl
	# when $V is not set, grep is 'grep musl', printing only link with musl
	void)
		V='-v'
	;& # fall-through
	void-musl)
		echo "Installing Void Linux"
		ROOTFS_TAR="$(curl -s -L https://voidlinux.org/download/ | grep $ARCH_UNAME | tr '"' ' ' | awk '{print $3}' | grep $V musl)"
		if [ ! -f "$ROOTFS_TAR" ]; then
			rm void-${ARCH_UNAME}${V}tar.xz || true
			wget $ROOTFS_TAR -O void-aarch64$V.tar.xz # musl: void-aarch64, non-musl: void-aarch64-v

		fi
		tar xfp void-${ARCH_UNAME}${V}.tar.xz -C $CADMIUMROOT/tmp/root
		cp /etc/resolv.conf root/etc/resolv.conf
		chroot root/ $qemu /bin/xbps-install -Syu xbps
		chroot root/ $qemu /bin/xbps-install -yu
		chroot root/ $qemu /bin/xbps-install -y base-system
		chroot root/ $qemu /bin/xbps-remove -y base-voidstrap
		chroot root/ $qemu /bin/xbps-install -y vim NetworkManager parted f2fs-tools
		cp void-${ARCH_UNAME}${V}.tar.xz root/void.tar.xz
	;;
	ubports)
		echo "Installing UBports"
		wget https://ci.ubports.com/job/xenial-mainline-edge-rootfs-$ARCH_DEB/lastSuccessfulBuild/artifact/out/ubuntu-touch-xenial-edge-$ARCH_DEB-rootfs.tar.gz
		tar xfp ubuntu-touch-xenial-edge-$ARCH_DEB-rootfs.tar.gz -C $CADMIUMROOT/tmp/root
	;;
esac

# remove root password, this is install medium so it's ok, not needed in ubports
[ ! "$ROOTFS" = "ubports" ] && chroot root/ $qemu /bin/passwd -d root

echo $TARGET > root/etc/hostname # set default hostname in kernel?

# workaround bad touchpad experience on certain boards
mkdir -p $CADMIUMROOT/tmp/root/etc/libinput
[ -f $CADMIUMROOT/board/$TARGET/libinput-quirk ] && cp $CADMIUMROOT/board/$TARGET/libinput-quirk root/etc/libinput/local-overrides.quirks

# copy iio sensor proxy accel file
[ -f $CADMIUMROOT/board/$TARGET/accel-matrix.hwdb ] && cp $CADMIUMROOT/board/$TARGET/accel-matrix.hwdb root/

# copy over firmware
mkdir -p $CADMIUMROOT/tmp/root/lib/firmware
cp -r $CADMIUMROOT/board/$TARGET/firmware/* $CADMIUMROOT/tmp/root/lib/firmware/

# install sway config to user dir
mkdir -p $CADMIUMROOT/tmp/root/etc/sway
cp $CADMIUMROOT/board/$TARGET/sway-config $CADMIUMROOT/tmp/root/root/swayconfig

# copy installation scripts if not ubports, double root is not a typo
if [ ! "$ROOTFS" = "ubports" ]; then
	# -begin sets up partition and fs, -middle installs distro, -end sets up distro
	[ "$ROOTFS" = "void-musl" ] && export ROOTFS=void # those 2 are the same in cadmium
	cat $CADMIUMROOT/fs/install-to-emmc-begin $CADMIUMROOT/fs/$ROOTFS/install-to-emmc-middle $CADMIUMROOT/fs/install-to-emmc-end > root/root/install-to-emmc
	chmod a+x root/root/install-to-emmc
fi

# copy config, boardinfo and baseboard info over
cat $CADMIUMROOT/config $CADMIUMROOT/board/$TARGET/boardinfo $CADMIUMROOT/baseboard/$BASEBOARD/boardinfo > root/root/info

# copy over ui installer settings
cp -r $CADMIUMROOT/ui root/root/ui
chmod a+x root/root/ui/install

#umount root # done in /build-all
